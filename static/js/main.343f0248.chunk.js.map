{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","preparedTodos","App","useState","setTitle","setUserId","setTodos","isTitleError","setTitleError","isUserError","setUserError","action","method","onSubmit","event","preventDefault","trim","Number","prev","array","newTodo","Math","max","person","type","placeholder","value","onChange","currentTarget","borderRed","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.343f0248.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","import './App.scss';\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nconst getUserById = (userId: number): User | null => {\n  return usersFromServer.find((user) => userId === user.id) || null;\n};\n\nconst getNewId = (array: { id: number }[]) => {\n  return Math.max(...array.map((person) => person.id)) + 1;\n};\n\nconst preparedTodos: Todo[] = todosFromServer.map((todo) => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId) || null,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(preparedTodos);\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(event.currentTarget.value);\n  };\n\n  const handleChangUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserError(false);\n    setUserId(Number(event.currentTarget.value));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title.trim() === '') {\n      setTitleError(true);\n    }\n\n    if (userId === 0) {\n      setUserError(true);\n    }\n\n    if (title === '' || userId === 0) {\n      return;\n    }\n\n    const user = getUserById(Number(userId));\n\n    setTitle('');\n    setUserId(0);\n\n    setTodos((prev) => {\n      const newTodo = {\n        id: getNewId(prev),\n        title,\n        completed: false,\n        userId: user ? user.id : null,\n        user,\n      };\n\n      return [...prev, newTodo];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <div className=\"wrapper\">\n        <form\n          className=\"form\"\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"field\">\n            <label>\n              {'Title: '}\n              <input\n                type=\"text\"\n                data-cy=\"titleInput\"\n                placeholder=\"Enter a title\"\n                value={title}\n                onChange={handleChangeTitle}\n                className={classNames('select', { borderRed: isTitleError })}\n              />\n            </label>\n            <div className=\"er\">\n              {isTitleError && (\n                <span className=\"error\">Please enter a title</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label>\n              {'User: '}\n              <select\n                className={classNames('select', { borderRed: isUserError })}\n                data-cy=\"userSelect\"\n                onChange={handleChangUser}\n                value={userId}\n              >\n                <option value=\"0\" disabled selected>\n                  Choose a user\n                </option>\n                {usersFromServer.map((user) => (\n                  <option key={user.id} value={user.id}>\n                    {user.name}\n                  </option>\n                ))}\n              </select>\n            </label>\n            <div className=\"er\">\n              {isUserError && (\n                <span className=\"error\">Please choose a user</span>\n              )}\n            </div>\n          </div>\n\n          <button type=\"submit\" data-cy=\"submitButton\" className=\"btn-submit\">\n            Add\n          </button>\n        </form>\n      </div>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}